#pragma once

enum AA_Pitch
{
	NOANTIAIMPITCH,
	STATIC_DOWN_TYPE_FIRST,
	STATIC_DOWN_TYPE_SECOND,
	STATIC_DOWN_TYPE_THIRD,
	STATIC_UP_TYPE_FIRST,
	STATIC_UP_TYPE_SECOND,
	STATIC_UP_TYPE_THIRD,
	STATIC_UP_TYPE_FOURTH,
	EMOTION_TYPE_FIRST,
	EMOTION_TYPE_SECOND,
	EMOTION_TYPE_THIRD,
	STATIC_DOWN_FAKE_TYPE_FIRST,
	STATIC_DOWN_FAKE_TYPE_SECOND,
	STATIC_DOWN_FAKE_TYPE_THIRD,
	STATIC_DOWN_FAKE_TYPE_FOURTH,
	STATIC_UP_FAKE_TYPE_FIRST,
	STATIC_UP_FAKE_TYPE_SECOND,
	SPINBOT,
	FRONT,
	DANCE_TYPE_FIRST,
	ZERO_X,
	FAKE_ZERO_X,
	RELIANT
};

enum AA_Yaw
{
	NOANTIAIMYAW,
	SIDEWAYS_LEFT,
	SIDEWAYS_RIGHT,
	BACKWARDS_TYPE_FIRST,
	BACKWARDS_TYPE_SECOND,
	BACKWARDS_TYPE_THIRD,
	FAKE_BACKWARDS,
	FORWARDS,
	FAKE_FORWARDS,
	FORWARDS_180,
	STATICAA,
	SPINBOT_CUSTOM_Y,
	SPINBOT_SLOW_TYPE_FIRST,
	SPINBOT_FAST_TYPE_FIRST,
	SPINBOT_SLOW_TYPE_SECOND,
	SPINBOT_FAST_TYPE_SECOND,
	SPINBOT_SLOW_TYPE_THIRD,
	SPINBOT_FAST_TYPE_THIRD,
	JITTER_TYPE_FIRST,
	JITTER_TYPE_SECOND,
	JITTER_TYPE_THIRD,
	JITTER_TYPE_FOURTH,
	JITTER_TYPE_FIFTH,
	JITTER_SYNCED,
	JITTER_180,
	JITTER_OPPOSING,
	BACK_JITTER,
	JITTER_FORWARDS,
	JITTER_SIDEWAYS,
	STATIC_JITTER,
	STATIC_SMALL_JITTER,
	SIDE,
	SIDE_JITTER,
	SIDE_BACKTRACK,
	SIDEWAYS_TYPE_FIRST,
	SIDEWAYS_TYPE_SECOND,
	SIDEWAYS_TYPE_THIRD,
	FAKE_SIDEWAYS_TYPE_FIRST,
	FAKE_SIDEWAYS_TYPE_SECOND,
	SIDEWAYS_180,
	ZERO_Y
};

enum AAZ_Pitch
{
	NOANTIAIMZETA,
	SPINBOT_Z,
	JITTER_Z,
	SIDEWAYS_Z
};

class CAntiAim
{
public:
	void Run();
private:
	bool GetBestHeadAngle(QAngle& angle);
	bool HasViableEnemy();
};

extern CAntiAim* AntiAim;
